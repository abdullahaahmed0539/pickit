{"version":3,"sources":["pages/ModeratorHome.jsx","API calls/products.js"],"names":["withRouter","history","useState","products","setProducts","useEffect","fetchPendingProducts","then","response","catch","console","log","className","length","scope","map","item","index","productName","href","_id","token","localStorage","getItem","header","headers","Authorization","fetchMyProducts","userId","pageId","productFilter","a","axios","post","createProduct","data","fetchProductDetails","get","updateProduct","deleteProduct","delete","unapprove","productId","exchangeableProducts","filter","transactionType","approve","getUploadLink","uploadImage","URL","file","options","type","put","fetchCart","addToCart","removeFromCart","sellProduct","fetchAllExchangable"],"mappings":"mJAgDeA,uBA1CO,SAAC,GAAgB,EAAdC,QAAe,IACtC,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KASA,OAPAC,qBAAU,WACRC,cACGC,MAAK,SAACC,GAAD,OAAcJ,EAAYI,MAC/BC,OAAM,kBAAMC,QAAQC,IAAI,iDAC1B,IAID,sBAAKC,UAAU,YAAf,UACE,sBAAKA,UAAU,WAAf,UACE,oDAAuBT,EAASU,OAAhC,OACA,0BAEF,qBAAKD,UAAU,WAAf,SACE,wBAAOA,UAAU,sBAAjB,UACE,gCACE,+BACE,oBAAIE,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,0BACA,oBAAIA,MAAM,MAAV,0BAGJ,gCACGX,EAASY,KAAI,SAACC,EAAMC,GAAP,OACZ,+BACE,+BAAKA,EAAQ,EAAb,OACA,6BAAKD,EAAKE,cACV,6BACE,mBAAGC,KAAI,oBAAeH,EAAKI,KAA3B,sBAJKH,oB,4kBC/BjBI,EAAQC,aAAaC,QAAQ,SAC7BC,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAGxCM,EAAe,uCAAG,WAAOC,EAAQC,EAAQC,GAAvB,eAAAC,EAAA,sEACNC,IAAMC,KAAN,sCACUL,EADV,iBAErB,CAAEC,SAAQC,iBACVN,GAJ2B,cACvBhB,EADuB,yBAMtBA,GANsB,2CAAH,0DAUf0B,EAAa,uCAAG,WAAMC,GAAN,eAAAJ,EAAA,sEACJC,IAAMC,KAAN,4CAErBE,EACAX,GAJyB,cACrBhB,EADqB,yBAMpBA,GANoB,2CAAH,sDAUb4B,EAAmB,uCAAG,WAAMhB,GAAN,eAAAW,EAAA,sEACVC,IAAMK,IAAN,yCACajB,GAClCI,GAH+B,cAC3BhB,EAD2B,yBAK1BA,GAL0B,2CAAH,sDASnB8B,EAAa,uCAAG,WAAMH,GAAN,eAAAJ,EAAA,sEACJC,IAAMC,KAAN,wCAErBE,EACAX,GAJyB,cACrBhB,EADqB,yBAMpBA,GANoB,2CAAH,sDAUb+B,EAAa,uCAAG,WAAMnB,GAAN,eAAAW,EAAA,sEACJC,IAAMQ,OAAN,yCACapB,GAClCI,GAHyB,cACrBhB,EADqB,yBAKpBA,GALoB,2CAAH,sDASbiC,EAAS,uCAAG,WAAMC,GAAN,eAAAX,EAAA,sEACAC,IAAMQ,OAAN,yCACaE,GAClClB,GAHqB,cACjBhB,EADiB,yBAKhBA,GALgB,2CAAH,sDASTF,EAAoB,uCAAG,8BAAAyB,EAAA,sEACXC,IAAMK,IAAN,4CAErBb,GAHgC,cAC5BhB,EAD4B,OAK5BmC,EAAuBnC,EAAS2B,KAAKA,KAAKS,QAC9C,SAAA5B,GAAI,MAA6B,aAAzBA,EAAK6B,mBANmB,kBAQ3BF,GAR2B,2CAAH,qDAYpBG,EAAO,uCAAG,WAAMX,GAAN,eAAAJ,EAAA,sEACEC,IAAMC,KAAN,yCAErBE,EACAX,GAJmB,cACfhB,EADe,yBAMdA,GANc,2CAAH,sDAUPuC,EAAa,uCAAG,4BAAAhB,EAAA,sEACJC,IAAMK,IAAN,+CADI,cACrB7B,EADqB,yBAIpBA,GAJoB,2CAAH,qDAQbwC,EAAW,uCAAG,WAAOC,EAAKC,GAAZ,iBAAAnB,EAAA,6DACnBoB,EAAU,CACd1B,QAAS,CACP,eAAgByB,EAAKE,OAHA,SAMFpB,IAAMqB,IAAIJ,EAAKC,EAAMC,GANnB,cAMnB3C,EANmB,yBAOlBA,GAPkB,2CAAH,wDAqBX8C,EAAS,uCAAG,WAAM1B,GAAN,eAAAG,EAAA,sEACAC,IAAMK,IAAN,8CACkBT,GACvCJ,GAHqB,cACjBhB,EADiB,yBAKhBA,GALgB,2CAAH,sDAST+C,EAAS,uCAAG,WAAMb,GAAN,eAAAX,EAAA,sEACAC,IAAMC,KAAN,mDACuBS,GAC5C,GACAlB,GAJqB,cACjBhB,EADiB,yBAMhBA,GANgB,2CAAH,sDAUTgD,EAAc,uCAAG,WAAMd,GAAN,eAAAX,EAAA,sEACLC,IAAMC,KAAN,wDAC4BS,GACjD,GACAlB,GAJ0B,cACtBhB,EADsB,yBAMrBA,GANqB,2CAAH,sDAUdiD,EAAW,uCAAG,WAAMrC,GAAN,eAAAW,EAAA,sEACFC,IAAMC,KAAN,8CAErB,CAAEb,OACFI,GAJuB,cACnBhB,EADmB,yBAMlBA,GANkB,2CAAH,sDAUXkD,EAAmB,uCAAG,4BAAA3B,EAAA,sEACVC,IAAMK,IAAN,uDAErBb,GAH+B,cAC3BhB,EAD2B,yBAK1BA,GAL0B,2CAAH","file":"static/js/24.26e08ccb.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  fetchPendingProducts,\r\n} from \"../API calls/products\";\r\n\r\nconst ModeratorHome = ({ history }) => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchPendingProducts()\r\n      .then((response) => setProducts(response))\r\n      .catch(() => console.log(\"Error while fetching unapproved products\"));\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className='row mt-5'>\r\n        <h2>Pending requests ({products.length})</h2>\r\n        <hr></hr>\r\n      </div>\r\n      <div className=\"row mt-4\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">S#</th>\r\n              <th scope=\"col\">Product Name</th>\r\n              <th scope=\"col\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((item, index) => (\r\n              <tr key={index}>\r\n                <td>{index + 1}.</td>\r\n                <td>{item.productName}</td>\r\n                <td>\r\n                  <a href={`/products/${item._id}`}>View</a>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ModeratorHome);\r\n","import axios from \"axios\";\n\nconst token = localStorage.getItem(\"token\");\nconst header = { headers: { Authorization: `Bearer ${token}` } };\n\n//fetches users product\nexport const fetchMyProducts = async (userId, pageId, productFilter) => {\n  const response = await axios.post(\n    `http://localhost:8080/users/${userId}/get_products`,\n    { pageId, productFilter },\n    header\n  );\n  return response;\n};\n\n//Creates a product\nexport const createProduct = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/create_new`,\n    data,\n    header\n  );\n  return response;\n};\n\n//fetch a product's detail\nexport const fetchProductDetails = async _id => {\n  const response = await axios.get(\n    `http://localhost:8080/products/${_id}`,\n    header\n  );\n  return response;\n};\n\n//Updates a product\nexport const updateProduct = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/update`,\n    data,\n    header\n  );\n  return response;\n};\n\n//delete a product\nexport const deleteProduct = async _id => {\n  const response = await axios.delete(\n    `http://localhost:8080/products/${_id}`,\n    header\n  );\n  return response;\n};\n\n//unapproves pending products\nexport const unapprove = async productId => {\n  const response = await axios.delete(\n    `http://localhost:8080/products/${productId}`,\n    header\n  );\n  return response;\n};\n\n//fetches pending products for the moderator\nexport const fetchPendingProducts = async () => {\n  const response = await axios.get(\n    `http://localhost:8080/products/unapproved`,\n    header\n  );\n  const exchangeableProducts = response.data.data.filter(\n    item => item.transactionType === \"exchange\"\n  );\n  return exchangeableProducts;\n};\n\n//approves products by moderator\nexport const approve = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/approve`,\n    data,\n    header\n  );\n  return response;\n};\n\n//fetches image upload link\nexport const getUploadLink = async () => {\n  const response = await axios.get(\n    `http://localhost:8080/products/upload_image`\n  );\n  return response;\n};\n\n//uploads to s3 bucket\nexport const uploadImage = async (URL, file) => {\n  const options = {\n    headers: {\n      \"Content-Type\": file.type,\n    },\n  };\n  const response = await axios.put(URL, file, options);\n  return response;\n};\n\n//allows moderator to update price\nexport const updatePrice = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/update`,\n    data,\n    header\n  );\n  return response;\n};\n\n//Fetch contents of user cart\nexport const fetchCart = async userId => {\n  const response = await axios.get(\n    `http://localhost:8080/products/cart/${userId}`,\n    header\n  );\n  return response;\n};\n\n//Add a product to user's cart\nexport const addToCart = async productId => {\n  const response = await axios.post(\n    `http://localhost:8080/products/addToCart/${productId}`,\n    {},\n    header\n  );\n  return response;\n};\n\n//Remove a product to user's cart\nexport const removeFromCart = async productId => {\n  const response = await axios.post(\n    `http://localhost:8080/products/removeFromCart/${productId}`,\n    {},\n    header\n  );\n  return response;\n};\n\n//sell a product\nexport const sellProduct = async _id => {\n  const response = await axios.post(\n    `http://localhost:8080/products/sell_product`,\n    { _id },\n    header\n  );\n  return response;\n};\n\n//fetches exchanegable\nexport const fetchAllExchangable = async () => {\n  const response = await axios.get(\n    `http://localhost:8080/products/fetch_all_exchangable`,\n    header\n  );\n  return response;\n};\n"],"sourceRoot":""}