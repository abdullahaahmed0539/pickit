{"version":3,"sources":["pages/Orders.jsx","API calls/orders.js"],"names":["Orders","useState","orders","setOrder","useEffect","myOrders","localStorage","getItem","then","response","data","catch","err","console","log","className","scope","map","item","index","status","href","_id","Date","date","getDate","getMonth","getFullYear","token","header","headers","Authorization","createOrder","a","axios","post","username","get","getOrder","orderId","getAllOrders","fullfilOrder"],"mappings":"4IA8DeA,UA3DA,WACb,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,qBAAU,WACRC,YAASC,aAAaC,QAAQ,aAC3BC,MAAK,SAAAC,GAAQ,OAAIN,EAASM,EAASC,KAAKA,KAAKR,WAC7CS,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IAGD,qBAAKG,UAAU,YAAf,SACE,qBAAKA,UAAU,WAAf,SACI,wBAAOA,UAAU,uBAAjB,UACE,gCACE,+BACE,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAMD,UAAU,oBAA1B,kBAGA,oBAAIC,MAAM,MAAV,yBAGJ,gCACGd,EAAOe,KAAI,SAACC,EAAMC,GAAP,OACV,qBACEJ,UACkB,gBAAhBG,EAAKE,OAA2B,GAAK,gBAFzC,UAME,+BAAKD,EAAQ,EAAb,OACA,6BACE,mBAAGE,KAAI,kBAAaH,EAAKI,KAAzB,SAAiCJ,EAAKI,QAExC,oBAAIP,UAAU,oBAAd,mBACE,IAAIQ,KAAKL,EAAKM,MAAMC,UAAY,EADlC,YAEI,IAAIF,KAAKL,EAAKM,MAAME,WAAa,EAFrC,YAE0C,IAAIH,KAC5CL,EAAKM,MACLG,iBAEF,oBACEZ,UACkB,gBAAhBG,EAAKE,OACD,cACA,eAJR,SAOGF,EAAKE,WAnBHD,iB,wPC9BjBS,EAAQtB,aAAaC,QAAQ,SAC7BsB,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYH,KAGxCI,EAAW,uCAAG,WAAMtB,GAAN,eAAAuB,EAAA,sEACFC,IAAMC,KAAN,4CAErBzB,EACAmB,GAJuB,cACnBpB,EADmB,yBAMlBA,GANkB,2CAAH,sDAUXJ,EAAQ,uCAAG,WAAM+B,GAAN,eAAAH,EAAA,sEACCC,IAAMG,IAAN,iDACqBD,GAC1CP,GAHoB,cAChBpB,EADgB,yBAKfA,GALe,2CAAH,sDASR6B,EAAQ,uCAAG,WAAMC,GAAN,eAAAN,EAAA,sEACCC,IAAMG,IAAN,uCACWE,GAChCV,GAHoB,cAChBpB,EADgB,yBAKfA,GALe,2CAAH,sDASR+B,EAAY,uCAAG,4BAAAP,EAAA,sEACHC,IAAMG,IAAN,8CAErBR,GAHwB,cACpBpB,EADoB,yBAKnBA,GALmB,2CAAH,qDAUZgC,EAAY,uCAAG,WAAO/B,GAAP,eAAAuB,EAAA,sEACHC,IAAMC,KAAN,uCAErBzB,EACAmB,GAJwB,cACpBpB,EADoB,yBAMnBA,GANmB,2CAAH","file":"static/js/23.c9686b4c.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { myOrders } from \"../API calls/orders\";\n\nconst Orders = () => {\n  const [orders, setOrder] = useState([]);\n\n  useEffect(() => {\n    myOrders(localStorage.getItem(\"username\"))\n      .then(response => setOrder(response.data.data.orders))\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row mt-4\">\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Order ID</th>\n                <th scope=\"col\" className=\"d-none d-md-block\">\n                  Date\n                </th>\n                <th scope=\"col\">Status</th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((item, index) => (\n                <tr\n                  className={\n                    item.status === \"In progress\" ? \"\" : \"table-success\"\n                  }\n                  key={index}\n                >\n                  <td>{index + 1}.</td>\n                  <td>\n                    <a href={`/orders/${item._id}`}>{item._id}</a>\n                  </td>\n                  <td className=\"d-none d-md-block\">{`${\n                    new Date(item.date).getDate() + 1\n                  }/${new Date(item.date).getMonth() + 1}/${new Date(\n                    item.date\n                  ).getFullYear()}`}</td>\n\n                  <td\n                    className={\n                      item.status === \"In progress\"\n                        ? \"text-danger\"\n                        : \"text-success\"\n                    }\n                  >\n                    {item.status}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Orders;\n","import axios from \"axios\";\n\nconst token = localStorage.getItem(\"token\");\nconst header = { headers: { Authorization: `Bearer ${token}` } };\n\n//create orders\nexport const createOrder = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/orders/create_order`,\n    data,\n    header\n  );\n  return response;\n};\n\n//list orders\nexport const myOrders = async username => {\n  const response = await axios.get(\n    `http://localhost:8080/orders/my_orders/${username}`,\n    header\n  );\n  return response;\n};\n\n//get order\nexport const getOrder = async orderId => {\n  const response = await axios.get(\n    `http://localhost:8080/orders/${orderId}`,\n    header\n  );\n  return response;\n};\n\n//list all orders\nexport const getAllOrders = async () => {\n  const response = await axios.get(\n    `http://localhost:8080/orders/get_all_orders`,\n    header\n  );\n  return response;\n};\n\n\n//list all orders\nexport const fullfilOrder = async (data) => {\n  const response = await axios.post(\n    `http://localhost:8080/orders/fullfil`,\n    data,\n    header\n  );\n  return response;\n};\n"],"sourceRoot":""}