{"version":3,"sources":["pages/Product.jsx","API calls/products.js","pages/Error.jsx","API calls/requests.js"],"names":["withRouter","history","productId","useParams","useState","product","setProduct","error","setError","responseRecieved","setResponseRecieved","inCart","setInCart","chosenProduct","setChosenProduct","chosenProductId","setChosenProductId","myProducts","setMyProducts","priceDifference","setPriceDifference","requestSent","setRequestSent","requestRecieved","setRequestRecieved","soldTo","setSoldTo","add","navigate","addToCart","then","response","status","alert","push","catch","err","console","log","useEffect","fetchProductDetails","data","sentRequest","recievedRequest","localStorage","getItem","fetchAllExchangable","filter","item","transactionType","className","text","title","message","src","images","alt","style","height","productName","price","onClick","username","pathname","state","name","description","image","requests","length","_id","imageLink","type","categoryid","categoryId","variant","removeFromCart","remove","Toggle","Menu","map","Item","marginTop","color","prodId","exchangeId","sender","reciever","sendRequest","request","disabled","async","action","approve","window","location","approveProduct","unapprove","token","header","headers","Authorization","fetchMyProducts","userId","pageId","productFilter","a","axios","post","createProduct","get","updateProduct","deleteProduct","delete","fetchPendingProducts","exchangeableProducts","getUploadLink","uploadImage","URL","file","options","put","fetchCart","sellProduct","Error","props","marginLeft","reload","info","senderName","recieverName","offer","cash","fetchProductRequests","performAction","requestId","fetchSentRequests","removeRequest"],"mappings":"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","file":"static/js/16.0787085d.chunk.js","sourcesContent":["import { useParams, withRouter } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  fetchProductDetails,\r\n  addToCart,\r\n  removeFromCart,\r\n  fetchAllExchangable,\r\n} from \"../API calls/products\";\r\nimport { sendRequest } from \"../API calls/requests\";\r\nimport Spinner from \"../Components/Spinner\";\r\nimport Error from \"./Error\";\r\nimport { approve, unapprove } from \"../API calls/products\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nconst ProductDetails = ({ history }) => {\r\n  const { productId } = useParams();\r\n  const [product, setProduct] = useState({});\r\n  const [error, setError] = useState(false);\r\n  const [responseRecieved, setResponseRecieved] = useState(false);\r\n  const [inCart, setInCart] = useState(false);\r\n  const [chosenProduct, setChosenProduct] = useState(\"\");\r\n  const [chosenProductId, setChosenProductId] = useState(\"\");\r\n  const [myProducts, setMyProducts] = useState([]);\r\n  const [priceDifference, setPriceDifference] = useState(0);\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [requestRecieved, setRequestRecieved] = useState(false);\r\n  const [soldTo, setSoldTo] = useState(\"\");\r\n\r\n  //moderator deletion of product\r\n  const approveProduct = async => {\r\n    const data = { action: \"active\", productId: product._id };\r\n    approve(data)\r\n      .then(() => (window.location = \"/moderator_home\"))\r\n      .catch(() => console.log(\"Error while approving product\"));\r\n  };\r\n\r\n  //moderator deletion of product\r\n  const deleteProduct = async => {\r\n    unapprove(product._id)\r\n      .then(() => (window.location = \"/moderator_home\"))\r\n      .catch(() => console.log(\"Error while unapproving product\"));\r\n  };\r\n\r\n  //adds to cart\r\n  const add = (productId, navigate) => {\r\n    addToCart(productId)\r\n      .then(response => {\r\n        if (response.status !== 200) {\r\n          alert(\"Unable to add product to cart !\");\r\n        } else {\r\n          setInCart(true);\r\n          if (navigate) {\r\n            history.push(`/checkout`);\r\n          }\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  const request = (prodId, exchangeId) => {\r\n    let sender = localStorage.getItem(\"username\");\r\n    let reciever = product.username;\r\n    sendRequest(prodId, sender, reciever, priceDifference, exchangeId)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          setRequestSent(true);\r\n          history.push(`/Home`);\r\n        } else {\r\n          alert(\"Unable to send request\");\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  const remove = productId => {\r\n    removeFromCart(productId)\r\n      .then(response => {\r\n        if (response.status !== 200) {\r\n          alert(\"Unable to remove product from the cart !\");\r\n        } else {\r\n          setInCart(false);\r\n        }\r\n      })\r\n      .catch(response => console.log(response));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProductDetails(productId)\r\n      .then(response => {\r\n        setResponseRecieved(true);\r\n        setProduct(response.data.data.product);\r\n        setInCart(response.data.data.inCart);\r\n        setRequestSent(response.data.data.sentRequest);\r\n        setRequestRecieved(response.data.data.recievedRequest);\r\n        setSoldTo(response.data.data.soldTo);\r\n      })\r\n      .catch(err => {\r\n        setResponseRecieved(true);\r\n        if (err.response.status === 406) {\r\n          setError(true);\r\n        }\r\n      });\r\n\r\n    if (localStorage.getItem(\"token\")) {\r\n      fetchAllExchangable(localStorage.getItem(\"user_id\"))\r\n        .then(response => {\r\n          setMyProducts(\r\n            response.data.data.filter(\r\n              item =>\r\n                item.transactionType === \"exchange\" && item.status === \"active\"\r\n            )\r\n          );\r\n        })\r\n        .catch(() => console.log(\"Error retrieving User Products from the db\"));\r\n    }\r\n  }, [productId, inCart, requestSent]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* When loading */}\r\n      {!responseRecieved && !error && (\r\n        <Spinner text=\"Fetching product details\" />\r\n      )}\r\n\r\n      {/* If error */}\r\n      {responseRecieved && error && (\r\n        <Error title=\"Error while fetching.\" message=\"Product Unavailable.\" />\r\n      )}\r\n\r\n      {/* If no error */}\r\n      {responseRecieved && !error && (\r\n        <div className=\"row mt-5\">\r\n          <img\r\n            className=\"col-12 col-md-4 mb-3\"\r\n            src={product.images}\r\n            alt=\"...\"\r\n            style={{ height: \"100%\" }}\r\n          />\r\n          <div className=\"col-12 col-md-6 offset-md-1\">\r\n            <div className=\"row\">\r\n              <h2 className=\"col-12\">{product.productName}</h2>\r\n            </div>\r\n            <div className=\"row mb-4\">\r\n              <div className=\"col-12\">price: </div>\r\n              <div className=\"col-12\">\r\n                <h4>PKR {product.price}</h4>\r\n              </div>\r\n            </div>\r\n\r\n            {/* If user not logged in */}\r\n            {localStorage.getItem(\"username\") === null && (\r\n              <div className=\"row\">\r\n                <button\r\n                  className=\"col-5 col-md-6 col-lg-4 ms-3 btn btn-success \"\r\n                  onClick={() => history.push(\"/login\")}\r\n                >\r\n                  Login to continue\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {product.status === \"sold\" && (\r\n              <p>\r\n                Sold to: <strong>{soldTo}</strong>\r\n              </p>\r\n            )}\r\n            {/* if user is loggedin/normal/owner/exchange */}\r\n            {product.username === localStorage.getItem(\"username\") &&\r\n              localStorage.getItem(\"userType\") === \"normal\" &&\r\n              product.transactionType === \"exchange\" &&\r\n              product.status !== \"sold\" && (\r\n                <div className=\"row\">\r\n                  <button\r\n                    className=\"col-5 col-md-4 col-lg-3 ms-3 btn btn-warning \"\r\n                    onClick={() =>\r\n                      history.push({\r\n                        pathname: `/requests/${productId}`,\r\n                        state: {\r\n                          name: product.productName,\r\n                          price: product.price,\r\n                          description: product.description,\r\n                          image: product.images,\r\n                        },\r\n                      })\r\n                    }\r\n                  >\r\n                    Requests{\" \"}\r\n                    {product.requests.length !== 0 ? (\r\n                      <span className=\"badge rounded-pill bg-danger\">\r\n                        {product.requests.length}\r\n                      </span>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </button>\r\n                  <button\r\n                    className=\"col-5 col-md-4 col-lg-3 ms-3 btn btn-primary\"\r\n                    onClick={() => {\r\n                      history.push({\r\n                        pathname: `/products/update_product`,\r\n                        state: {\r\n                          _id: product._id,\r\n                          name: product.productName,\r\n                          price: product.price,\r\n                          imageLink: product.images[0],\r\n                          description: product.description,\r\n                          type: product.transactionType,\r\n                          categoryid: product.categoryId,\r\n                        },\r\n                      });\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n            {/* if loggedin/normal/owner/sell/active */}\r\n            {product.username === localStorage.getItem(\"username\") &&\r\n              localStorage.getItem(\"userType\") === \"normal\" &&\r\n              product.transactionType === \"sell\" &&\r\n              product.status !== \"sold\" && (\r\n                <div className=\"row\">\r\n                  <button\r\n                    className=\"col-5 col-md-5 col-lg-4 ms-3 btn btn-primary \"\r\n                    onClick={() => {\r\n                      history.push({\r\n                        pathname: `/products/update_product`,\r\n                        state: {\r\n                          _id: product._id,\r\n                          name: product.productName,\r\n                          price: product.price,\r\n                          imageLink: product.images[0],\r\n                          description: product.description,\r\n                          type: product.transactionType,\r\n                          categoryid: product.categoryId,\r\n                        },\r\n                      });\r\n                    }}\r\n                    variant=\"primary\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n            {/* user loggedIn/normal/not owner/sell */}\r\n            {product.transactionType === \"sell\" &&\r\n              localStorage.getItem(\"userType\") === \"normal\" &&\r\n              product.username !== localStorage.getItem(\"username\") && (\r\n                <div className=\"row\">\r\n                  {/* NOT ADDED TO CART */}\r\n                  {!inCart && product.status === \"active\" && (\r\n                    <button\r\n                      onClick={() => add(productId, false)}\r\n                      className=\"col-5 col-md-4 col-lg-3 ms-3 btn btn-primary \"\r\n                    >\r\n                      Add to cart\r\n                    </button>\r\n                  )}\r\n                  {/* ADDED TO CART */}\r\n                  {inCart && product.status === \"active\" && (\r\n                    <button\r\n                      onClick={() => remove(productId)}\r\n                      className=\"col-5 col-md-4 col-lg-3 ms-3 btn btn-secondary \"\r\n                    >\r\n                      Remove from cart\r\n                    </button>\r\n                  )}\r\n                  {product.status === \"active\" && (\r\n                    <button\r\n                      className=\"col-5 col-md-4 col-lg-3 ms-3 btn btn-success \"\r\n                      onClick={() => add(productId, true)}\r\n                    >\r\n                      Checkout\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n            {/* user loggedIn/normal/not owner/exchange */}\r\n            {!requestRecieved &&\r\n              product.transactionType === \"exchange\" &&\r\n              localStorage.getItem(\"userType\") === \"normal\" &&\r\n              product.username !== localStorage.getItem(\"username\") &&\r\n              product.status !== \"sold\" && (\r\n                <div className=\"row\">\r\n                  {!requestSent && <h6>Exchange with: </h6>}\r\n                  {!requestSent ? (\r\n                    <Dropdown>\r\n                      <Dropdown.Toggle\r\n                        variant=\"light\"\r\n                        className=\"btn-outline-dark\"\r\n                      >\r\n                        {chosenProduct}\r\n                      </Dropdown.Toggle>\r\n                      <Dropdown.Menu className=\"col-12\">\r\n                        {myProducts.map(item => (\r\n                          <Dropdown.Item\r\n                            key={item._id}\r\n                            onClick={() => {\r\n                              setChosenProduct(item.productName);\r\n                              setChosenProductId(item._id);\r\n                              setPriceDifference(product.price - item.price);\r\n                            }}\r\n                          >\r\n                            <p className=\"col-3\">{item.productName}</p>\r\n                          </Dropdown.Item>\r\n                        ))}\r\n                      </Dropdown.Menu>\r\n                    </Dropdown>\r\n                  ) : (\r\n                    <h6 className=\"text-danger\">\r\n                      You have already sent a request for this product.\r\n                    </h6>\r\n                  )}\r\n\r\n                  {chosenProduct !== \"\" && priceDifference > 0 && (\r\n                    <p style={{ marginTop: \"5px\", color: \"red\" }}>\r\n                      You will have to pay additional Rs : {priceDifference}\r\n                    </p>\r\n                  )}\r\n\r\n                  {chosenProduct !== \"\" && priceDifference < 0 && (\r\n                    <p style={{ marginTop: \"5px\", color: \"blue\" }}>\r\n                      You will recieve Rs : {-priceDifference}\r\n                    </p>\r\n                  )}\r\n                  {!requestSent && (\r\n                    <button\r\n                      className=\"col-5 col-md-5 col-lg-4 ms-3 mt-3 btn btn-primary \"\r\n                      onClick={() => request(productId, chosenProductId)}\r\n                      disabled={\r\n                        chosenProduct === \"\" || requestSent ? true : false\r\n                      }\r\n                    >\r\n                      {requestSent ? \"Request Sent\" : \"Send Request\"}\r\n                    </button>\r\n                  )}\r\n                  {requestSent && (\r\n                    <div style={{ marginTop: \"10px\" }}>\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() =>\r\n                          history.push(\r\n                            `/requests/sent/${localStorage.getItem(\"user_id\")}`\r\n                          )\r\n                        }\r\n                      >\r\n                        View request\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n            <div className=\"row mt-5\">\r\n              <h5>About the product</h5>\r\n              <p> {product.description}</p>\r\n            </div>\r\n\r\n            <div className=\"row mt-2\">\r\n              <h5>Seller details</h5>\r\n              <p>\r\n                {\" \"}\r\n                Username: <strong>{product.username}</strong>\r\n              </p>\r\n            </div>\r\n\r\n            {/* user loggedIn/moderator */}\r\n            {localStorage.getItem(\"userType\") === \"moderator\" && (\r\n              <div className=\"row mt-4 mb-5\">\r\n                <button\r\n                  className=\"col-4 col-md-4 col-lg-3 ms-3 me-1 btn btn-primary \"\r\n                  onClick={() =>\r\n                    history.push(`/products/${product._id}/updatePrice`)\r\n                  }\r\n                >\r\n                  Update product\r\n                </button>\r\n                <button\r\n                  className=\"col-3 col-md-3 col-lg-3 me-1 btn btn-success \"\r\n                  onClick={() => approveProduct(product._id)}\r\n                >\r\n                  Approve\r\n                </button>\r\n                <button\r\n                  className=\"col-3 col-md-3 col-lg-3 btn btn-danger \"\r\n                  onClick={() => deleteProduct(product._id)}\r\n                >\r\n                  Reject\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(ProductDetails);\r\n","import axios from \"axios\";\n\nconst token = localStorage.getItem(\"token\");\nconst header = { headers: { Authorization: `Bearer ${token}` } };\n\n//fetches users product\nexport const fetchMyProducts = async (userId, pageId, productFilter) => {\n  const response = await axios.post(\n    `http://localhost:8080/users/${userId}/get_products`,\n    { pageId, productFilter },\n    header\n  );\n  return response;\n};\n\n//Creates a product\nexport const createProduct = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/create_new`,\n    data,\n    header\n  );\n  return response;\n};\n\n//fetch a product's detail\nexport const fetchProductDetails = async _id => {\n  const response = await axios.get(\n    `http://localhost:8080/products/${_id}`,\n    header\n  );\n  return response;\n};\n\n//Updates a product\nexport const updateProduct = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/update`,\n    data,\n    header\n  );\n  return response;\n};\n\n//delete a product\nexport const deleteProduct = async _id => {\n  const response = await axios.delete(\n    `http://localhost:8080/products/${_id}`,\n    header\n  );\n  return response;\n};\n\n//unapproves pending products\nexport const unapprove = async productId => {\n  const response = await axios.delete(\n    `http://localhost:8080/products/${productId}`,\n    header\n  );\n  return response;\n};\n\n//fetches pending products for the moderator\nexport const fetchPendingProducts = async () => {\n  const response = await axios.get(\n    `http://localhost:8080/products/unapproved`,\n    header\n  );\n  const exchangeableProducts = response.data.data.filter(\n    item => item.transactionType === \"exchange\"\n  );\n  return exchangeableProducts;\n};\n\n//approves products by moderator\nexport const approve = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/approve`,\n    data,\n    header\n  );\n  return response;\n};\n\n//fetches image upload link\nexport const getUploadLink = async () => {\n  const response = await axios.get(\n    `http://localhost:8080/products/upload_image`\n  );\n  return response;\n};\n\n//uploads to s3 bucket\nexport const uploadImage = async (URL, file) => {\n  const options = {\n    headers: {\n      \"Content-Type\": file.type,\n    },\n  };\n  const response = await axios.put(URL, file, options);\n  return response;\n};\n\n//allows moderator to update price\nexport const updatePrice = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/update`,\n    data,\n    header\n  );\n  return response;\n};\n\n//Fetch contents of user cart\nexport const fetchCart = async userId => {\n  const response = await axios.get(\n    `http://localhost:8080/products/cart/${userId}`,\n    header\n  );\n  return response;\n};\n\n//Add a product to user's cart\nexport const addToCart = async productId => {\n  const response = await axios.post(\n    `http://localhost:8080/products/addToCart/${productId}`,\n    {},\n    header\n  );\n  return response;\n};\n\n//Remove a product to user's cart\nexport const removeFromCart = async productId => {\n  const response = await axios.post(\n    `http://localhost:8080/products/removeFromCart/${productId}`,\n    {},\n    header\n  );\n  return response;\n};\n\n//sell a product\nexport const sellProduct = async _id => {\n  const response = await axios.post(\n    `http://localhost:8080/products/sell_product`,\n    { _id },\n    header\n  );\n  return response;\n};\n\n//fetches exchanegable\nexport const fetchAllExchangable = async () => {\n  const response = await axios.get(\n    `http://localhost:8080/products/fetch_all_exchangable`,\n    header\n  );\n  return response;\n};\n","import React from 'react'\n\n\nconst Error = props => {\n    return (\n      <div\n        className=\"container border border-dark\"\n        style={{ marginTop: \"20%\" }}\n      >\n        <div className=\"row mt-5\">\n          <div className=\"col-md-8 offset-md-4\">\n            <h1>{props.title}</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-8 offset-md-4\">\n            <h4>{props.message}</h4>\n          </div>\n        </div>\n        <div className=\"row\">\n          <button\n            className=\"btn btn-primary col-md-2 offset-md-4 mt-4 mb-5\"\n            style={{ marginLeft: \"32em\" }}\n            onClick={() => {\n              window.location.reload(true);\n            }}\n          >\n            Reload\n          </button>\n        </div>\n      </div>\n    );\n}\n\nexport default Error\n","import axios from \"axios\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\nconst header = { headers: { Authorization: `Bearer ${token}` } };\r\n\r\n\r\n//fetches users product\r\nexport const fetchMyProducts = async (userId) => {\r\n  const response = await axios.get(\r\n    `http://localhost:8080/users/${userId}/get_products`,\r\n    header\r\n  );\r\n  return response;\r\n};\r\n\r\n//Send request for a product\r\nexport const sendRequest = async (prodId, sender, reciever, price,exchangeId) => {\r\n  const info = {\r\n        senderName: sender,\r\n        recieverName: reciever,\r\n        productId: prodId,\r\n        offer: {\r\n            cash: price,\r\n            productId: exchangeId\r\n        }\r\n    };\r\n  const response = await axios.post(\r\n    `http://localhost:8080/requests/create_new`,info,header\r\n  );\r\n  return response;\r\n}\r\n\r\n// //fetch a product's detail\r\nexport const fetchProductRequests = async (_id) => {\r\n  const response = await axios.get(\r\n    `http://localhost:8080/requests/${_id}`,\r\n    header\r\n  );\r\n  return response;\r\n};\r\n\r\n//Perform an action on the request\r\nexport const performAction = async (requestId, action) => {\r\n  const response = await axios.post(\r\n    `http://localhost:8080/requests/${requestId}`,{action},header\r\n  );\r\n  return response;\r\n}\r\n\r\n// //fetch requests sent by a user to different products\r\nexport const fetchSentRequests = async () => {\r\n  const response = await axios.get(\r\n    `http://localhost:8080/requests/pending`,\r\n    header\r\n  );\r\n  return response;\r\n};\r\n\r\n// API call to remove the request from db\r\nexport const removeRequest = async (requestId) => {\r\n  const response = await axios.get(\r\n    `http://localhost:8080/requests/remove/${requestId}`,\r\n    header\r\n  );\r\n  return response;\r\n};\r\n"],"sourceRoot":""}