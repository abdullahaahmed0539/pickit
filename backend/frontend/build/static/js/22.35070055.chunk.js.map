{"version":3,"sources":["pages/Order.jsx","API calls/orders.js"],"names":["Order","orderId","useParams","useState","order","setOrder","loaded","setLoaded","useEffect","getOrder","then","response","data","catch","err","console","log","className","text","_id","status","Date","date","getDate","getMonth","getFullYear","total","verificationCode","scope","map","item","index","productName","username","price","href","email","phone","address","token","localStorage","getItem","header","headers","Authorization","createOrder","a","axios","post","myOrders","get","getAllOrders","fullfilOrder"],"mappings":"2JAwGeA,UAnGD,WACZ,IAAQC,EAAYC,cAAZD,QACR,EAA0BE,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KAWA,OATAC,qBAAU,WACRC,YAASR,GACNS,MAAK,SAAAC,GACJN,EAASM,EAASC,KAAKA,KAAKR,OAC5BG,GAAU,MAEXM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACb,IAGF,sBAAKgB,UAAU,YAAf,WACIX,GAAU,cAAC,IAAD,CAASY,KAAK,YACzBZ,GACC,sBAAKW,UAAU,qBAAf,UACE,qBAAKA,UAAU,cAAf,2BACA,sBAAKA,UAAU,YAAf,UACE,qBAAIA,UAAU,aAAd,wBAAuCb,EAAMe,OAC7C,oBAAGF,UAAU,YAAb,oBACU,IACR,wBACEA,UACmB,aAAjBb,EAAMgB,OAAwB,eAAiB,cAFnD,SAKGhB,EAAMgB,YAGX,oBAAGH,UAAU,YAAb,kBAEE,4CACO,IAAII,KAAKjB,EAAMkB,MAAMC,UAAY,EADxC,YAEI,IAAIF,KAAKjB,EAAMkB,MAAME,WAAa,EAFtC,YAGM,IAAIH,KAAKjB,EAAMkB,MAAMG,oBAG7B,6CAAgBrB,EAAMsB,SACtB,kDAEE,iCACE,yCAAUtB,EAAMuB,yBAGpB,uBACA,oBAAIV,UAAU,aAAd,0BAEA,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,oBAAIW,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,oBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,0BAGJ,gCACGxB,EAAMA,MAAMyB,KAAI,SAACC,EAAMC,GAAP,OACf,+BACE,+BAAKA,EAAQ,EAAb,OACA,6BAAKD,EAAKE,cACV,6BAAKF,EAAKG,WACV,6BAAKH,EAAKI,QACV,6BACE,mBAAGC,KAAI,oBAAeL,EAAKX,KAA3B,sBANKY,WAYf,oBAAId,UAAU,kBAAd,6BACA,oBAAGA,UAAU,YAAb,sBAEE,4CAAab,EAAM6B,eAErB,oBAAGhB,UAAU,YAAb,oBAEE,4CAAab,EAAMgC,eAGvB,oBAAGnB,UAAU,YAAb,0BAEE,6CAAcb,EAAMiC,YAEtB,oBAAGpB,UAAU,iBAAb,qBAEE,4CAAab,EAAMkC,cAErB,+B,wPC/FJC,EAAQC,aAAaC,QAAQ,SAC7BC,EAAS,CAAEC,QAAS,CAAEC,cAAc,UAAD,OAAYL,KAGxCM,EAAW,uCAAG,WAAMjC,GAAN,eAAAkC,EAAA,sEACFC,IAAMC,KAAN,4CAErBpC,EACA8B,GAJuB,cACnB/B,EADmB,yBAMlBA,GANkB,2CAAH,sDAUXsC,EAAQ,uCAAG,WAAMhB,GAAN,eAAAa,EAAA,sEACCC,IAAMG,IAAN,iDACqBjB,GAC1CS,GAHoB,cAChB/B,EADgB,yBAKfA,GALe,2CAAH,sDASRF,EAAQ,uCAAG,WAAMR,GAAN,eAAA6C,EAAA,sEACCC,IAAMG,IAAN,uCACWjD,GAChCyC,GAHoB,cAChB/B,EADgB,yBAKfA,GALe,2CAAH,sDASRwC,EAAY,uCAAG,4BAAAL,EAAA,sEACHC,IAAMG,IAAN,8CAErBR,GAHwB,cACpB/B,EADoB,yBAKnBA,GALmB,2CAAH,qDAUZyC,EAAY,uCAAG,WAAOxC,GAAP,eAAAkC,EAAA,sEACHC,IAAMC,KAAN,uCAErBpC,EACA8B,GAJwB,cACpB/B,EADoB,yBAMnBA,GANmB,2CAAH","file":"static/js/22.35070055.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getOrder } from \"../API calls/orders\";\nimport Spinner from \"../Components/Spinner\";\n\nconst Order = () => {\n  const { orderId } = useParams();\n  const [order, setOrder] = useState({});\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    getOrder(orderId)\n      .then(response => {\n        setOrder(response.data.data.order);\n        setLoaded(true);\n      })\n      .catch(err => console.log(err));\n  }, [orderId]);\n\n  return (\n    <div className=\"container\">\n      {!loaded && <Spinner text=\"Loading\" />}\n      {loaded && (\n        <div className=\"row mt-5 mb-4 card\">\n          <div className=\"card-header\">Order details</div>\n          <div className=\"card-body\">\n            <h3 className=\"card-title\">Order ID : {order._id}</h3>\n            <p className=\"card-text\">\n              Status:{\" \"}\n              <strong\n                className={\n                  order.status === \"complete\" ? \"text-success\" : \"text-danger\"\n                }\n              >\n                {order.status}\n              </strong>\n            </p>\n            <p className=\"card-text\">\n              Date:\n              <strong>\n                {` ${new Date(order.date).getDate() + 1}/${\n                  new Date(order.date).getMonth() + 1\n                }/${new Date(order.date).getFullYear()}`}\n              </strong>\n            </p>\n            <h4>Total: PKR {order.total}</h4>\n            <p>\n              Verification PIN:  \n              <strong>\n                <u>{`   ${order.verificationCode}`}</u>\n              </strong>\n            </p>\n            <hr />\n            <h4 className=\"card-title\">Items bought</h4>\n\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Item#</th>\n                  <th scope=\"col\">Item Name</th>\n                  <th scope=\"col\">Seller</th>\n                  <th scope=\"col\">Price(PKR)</th>\n                  <th scope=\"col\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {order.order.map((item, index) => (\n                  <tr key={index}>\n                    <td>{index + 1}.</td>\n                    <td>{item.productName}</td>\n                    <td>{item.username}</td>\n                    <td>{item.price}</td>\n                    <td>\n                      <a href={`/products/${item._id}`}>View</a>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <h4 className=\"card-title mt-4\">Buyer's details</h4>\n            <p className=\"card-text\">\n              Username:\n              <strong>{` ${order.username}`}</strong>\n            </p>\n            <p className=\"card-text\">\n              E-mail:\n              <strong>{` ${order.email}`}</strong>\n            </p>\n          </div>\n          <p className=\"card-text\">\n            Phone number:\n            <strong>{` 0${order.phone}`}</strong>\n          </p>\n          <p className=\"mb-2 card-text\">\n            Address:\n            <strong>{` ${order.address}`}</strong>\n          </p>\n          <hr />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Order;\n","import axios from \"axios\";\n\nconst token = localStorage.getItem(\"token\");\nconst header = { headers: { Authorization: `Bearer ${token}` } };\n\n//create orders\nexport const createOrder = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/orders/create_order`,\n    data,\n    header\n  );\n  return response;\n};\n\n//list orders\nexport const myOrders = async username => {\n  const response = await axios.get(\n    `http://localhost:8080/orders/my_orders/${username}`,\n    header\n  );\n  return response;\n};\n\n//get order\nexport const getOrder = async orderId => {\n  const response = await axios.get(\n    `http://localhost:8080/orders/${orderId}`,\n    header\n  );\n  return response;\n};\n\n//list all orders\nexport const getAllOrders = async () => {\n  const response = await axios.get(\n    `http://localhost:8080/orders/get_all_orders`,\n    header\n  );\n  return response;\n};\n\n\n//list all orders\nexport const fullfilOrder = async (data) => {\n  const response = await axios.post(\n    `http://localhost:8080/orders/fullfil`,\n    data,\n    header\n  );\n  return response;\n};\n"],"sourceRoot":""}