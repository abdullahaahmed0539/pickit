{"version":3,"sources":["pages/UpdatePrice.jsx","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","API calls/products.js"],"names":["withRouter","history","useState","product","setProduct","productId","useParams","useEffect","console","log","fetchProductDetails","then","response","data","catch","err","submitChanges","e","a","preventDefault","modifiedProduct","_id","productName","categoryId","username","description","images","transactionType","date","price","updateProduct","status","window","location","alert","className","src","alt","onSubmit","style","marginTop","htmlFor","id","placeholder","value","onChange","target","height","type","text","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","token","localStorage","getItem","header","headers","Authorization","fetchMyProducts","userId","pageId","productFilter","axios","post","createProduct","get","deleteProduct","delete","unapprove","fetchPendingProducts","exchangeableProducts","item","approve","getUploadLink","uploadImage","URL","file","options","put","fetchCart","addToCart","removeFromCart","sellProduct","fetchAllExchangable"],"mappings":"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","file":"static/js/15.a791ef51.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, withRouter } from \"react-router-dom\";\n\nimport { updateProduct, fetchProductDetails } from \"../API calls/products\";\nimport Spinner from \"../Components/Spinner\";\n\nconst UpdatePrice = ({ history }) => {\n  let initialProduct = {\n    productName: \"\",\n    _id: \"\",\n    description: \"\",\n    username: \"\",\n    categoryId: \"\",\n    price: \"\",\n    transactionType: \"\",\n    images: [],\n    date: \"\",\n    status: \"\",\n    requests: [],\n  };\n\n  const [product, setProduct] = useState(null);\n  const { productId } = useParams();\n\n  useEffect(() => {\n    console.log(productId)\n    fetchProductDetails(productId)\n      .then(response => {\n        setProduct(response.data.data.product)\n        console.log(product);\n      })\n      .catch(err => console.log(err));\n    \n  }, [productId]);\n\n  const submitChanges = async e => {\n    e.preventDefault();\n\n    const modifiedProduct = {\n      _id: productId,\n      productName: product.productName,\n      categoryId: product.categoryId,\n      username: product.username,\n      description: product.description,\n      images: product.images,\n      transactionType: product.transactionType,\n      date: product.date,\n      price: product.price,\n    };\n\n      updateProduct(modifiedProduct)\n        .then(response => {\n          if (response.status === 200 && response.data) {\n            window.location = `/products/${product._id}`;\n          }\n        })\n        .catch(err => {\n          if (err.response && err.response.status === 401) {\n            alert(\"Update request Unsuccessful\");\n          }\n        });\n    \n  };\n\n  if (product) {\n    return (\n      <div className=\"container\">\n       \n          <div className=\"row mt-5\">\n            <img className=\"col-md-4\" src={product.images} alt=\"...\" />\n            <div className=\"col-md-7 offset-md-1\">\n              <h2>Edit details</h2>\n              <form onSubmit={submitChanges}>\n                <div className=\"form-group\">\n                  <label style={{ marginTop: \"20px\" }} htmlFor=\"productName\">\n                    <strong>Product Name</strong>\n                  </label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"productName\"\n                    placeholder=\"Enter product title\"\n                    value={product.productName}\n                    onChange={e => {\n                      let modifiedProduct = { ...product };\n                      modifiedProduct.productName = e.target.value;\n                      setProduct(modifiedProduct);\n                    }}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label style={{ marginTop: \"10px\" }} htmlFor=\"description\">\n                    <strong>Description</strong>\n                  </label>\n                  <textarea\n                    style={{ height: \"200px\" }}\n                    className=\"form-control\"\n                    id=\"description\"\n                    placeholder=\"Enter product description\"\n                    value={product.description}\n                    onChange={e => {\n                      let modifiedProduct = { ...product };\n                      modifiedProduct.description = e.target.value;\n                      setProduct(modifiedProduct);\n                    }}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label style={{ marginTop: \"10px\" }} htmlFor=\"price\">\n                    <strong>Price (Rs)</strong>{\" \"}\n                  </label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"price\"\n                    placeholder=\"Enter product price\"\n                    value={product.price}\n                    onChange={e => {\n                      let modifiedProduct = { ...product };\n                      modifiedProduct.price = e.target.value;\n                      setProduct(modifiedProduct);\n                    }}\n                  />\n                </div>\n                <button\n                  style={{ marginTop: \"15px\" }}\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                >\n                  Save\n                </button>\n              </form>\n            </div>\n          </div>\n        )\n      </div>\n    );\n\n  } else {\n    return <Spinner text='loading'/>\n  }\n\n  };\n\nexport default withRouter(UpdatePrice);\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import axios from \"axios\";\n\nconst token = localStorage.getItem(\"token\");\nconst header = { headers: { Authorization: `Bearer ${token}` } };\n\n//fetches users product\nexport const fetchMyProducts = async (userId, pageId, productFilter) => {\n  const response = await axios.post(\n    `http://localhost:8080/users/${userId}/get_products`,\n    { pageId, productFilter },\n    header\n  );\n  return response;\n};\n\n//Creates a product\nexport const createProduct = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/create_new`,\n    data,\n    header\n  );\n  return response;\n};\n\n//fetch a product's detail\nexport const fetchProductDetails = async _id => {\n  const response = await axios.get(\n    `http://localhost:8080/products/${_id}`,\n    header\n  );\n  return response;\n};\n\n//Updates a product\nexport const updateProduct = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/update`,\n    data,\n    header\n  );\n  return response;\n};\n\n//delete a product\nexport const deleteProduct = async _id => {\n  const response = await axios.delete(\n    `http://localhost:8080/products/${_id}`,\n    header\n  );\n  return response;\n};\n\n//unapproves pending products\nexport const unapprove = async productId => {\n  const response = await axios.delete(\n    `http://localhost:8080/products/${productId}`,\n    header\n  );\n  return response;\n};\n\n//fetches pending products for the moderator\nexport const fetchPendingProducts = async () => {\n  const response = await axios.get(\n    `http://localhost:8080/products/unapproved`,\n    header\n  );\n  const exchangeableProducts = response.data.data.filter(\n    item => item.transactionType === \"exchange\"\n  );\n  return exchangeableProducts;\n};\n\n//approves products by moderator\nexport const approve = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/approve`,\n    data,\n    header\n  );\n  return response;\n};\n\n//fetches image upload link\nexport const getUploadLink = async () => {\n  const response = await axios.get(\n    `http://localhost:8080/products/upload_image`\n  );\n  return response;\n};\n\n//uploads to s3 bucket\nexport const uploadImage = async (URL, file) => {\n  const options = {\n    headers: {\n      \"Content-Type\": file.type,\n    },\n  };\n  const response = await axios.put(URL, file, options);\n  return response;\n};\n\n//allows moderator to update price\nexport const updatePrice = async data => {\n  const response = await axios.post(\n    `http://localhost:8080/products/update`,\n    data,\n    header\n  );\n  return response;\n};\n\n//Fetch contents of user cart\nexport const fetchCart = async userId => {\n  const response = await axios.get(\n    `http://localhost:8080/products/cart/${userId}`,\n    header\n  );\n  return response;\n};\n\n//Add a product to user's cart\nexport const addToCart = async productId => {\n  const response = await axios.post(\n    `http://localhost:8080/products/addToCart/${productId}`,\n    {},\n    header\n  );\n  return response;\n};\n\n//Remove a product to user's cart\nexport const removeFromCart = async productId => {\n  const response = await axios.post(\n    `http://localhost:8080/products/removeFromCart/${productId}`,\n    {},\n    header\n  );\n  return response;\n};\n\n//sell a product\nexport const sellProduct = async _id => {\n  const response = await axios.post(\n    `http://localhost:8080/products/sell_product`,\n    { _id },\n    header\n  );\n  return response;\n};\n\n//fetches exchanegable\nexport const fetchAllExchangable = async () => {\n  const response = await axios.get(\n    `http://localhost:8080/products/fetch_all_exchangable`,\n    header\n  );\n  return response;\n};\n"],"sourceRoot":""}